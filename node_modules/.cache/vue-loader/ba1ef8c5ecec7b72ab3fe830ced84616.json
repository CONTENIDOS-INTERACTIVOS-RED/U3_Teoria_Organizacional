{"remainingRequest":"/home/runner/work/U3_Teoria_Organizacional/U3_Teoria_Organizacional/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U3_Teoria_Organizacional/U3_Teoria_Organizacional/src/views/curso/Tema4.vue?vue&type=template&id=7637683b&lang=pug&","dependencies":[{"path":"/home/runner/work/U3_Teoria_Organizacional/U3_Teoria_Organizacional/src/views/curso/Tema4.vue","mtime":1741709031719},{"path":"/home/runner/work/U3_Teoria_Organizacional/U3_Teoria_Organizacional/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Teoria_Organizacional/U3_Teoria_Organizacional/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U3_Teoria_Organizacional/U3_Teoria_Organizacional/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U3_Teoria_Organizacional/U3_Teoria_Organizacional/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Teoria_Organizacional/U3_Teoria_Organizacional/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJubyg6c3ViVGl0dWxvPSInNC4gQ29tcG9uZW50ZXMgZGUgbGEgY3VsdHVyYSBvcmdhbml6YWNpb25hbCciKQogIC5jb250YWluZXIudGFyamV0YS50YXJqZXRhLS1ibGFuY2EucC00LnAtbWQtNS5vdmVyZmxvdy1oaWRkZW4KCiAgICAuYmctY29sb3ItMy5tYi01KGRhdGEtYW9zPSJmYWRlLXVwIikKICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgIC5jb2wtbGctYXV0by5tYi0zLm1iLWxnLTAKICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hNC8xLnBuZycsIGFsdD0nJykKICAgICAgICAuY29sLWxnCiAgICAgICAgICAucC00CiAgICAgICAgICAgIHAubWItMChkYXRhLWFvcz0iZmFkZS11cCIpIExhIGN1bHR1cmEgb3JnYW5pemFjaW9uYWwgZXMgdW4gY29uanVudG8gZGUgc2lnbmlmaWNhZG9zIGNvbXBhcnRpZG9zIHBvciBsb3MgaW50ZWdyYW50ZXMgZGUgdW5hIGVtcHJlc2EsIGxvcyBjdWFsZXMgbGEgZGlmZXJlbmNpYW4gZGUgb3RyYXMuIFNlIGNvbXBvbmUgZGUgcHJpbmNpcGlvcywgY3JlZW5jaWFzIHkgY29ub2NpbWllbnRvcyBjbGF2ZXMgcXVlIHNvbiBjb211bmVzIGVudHJlIHN1cyBtaWVtYnJvcywgZGVmaW5pZW5kbyBhc8OtIHN1IGNvbXBvcnRhbWllbnRvIGhhYml0dWFsIChMdW5hIEdvbnrDoWxleiwgMjAxNSkuCiAgICAKICAgIHAubWItNCBDb21wb25lbnRlczoKCiAgICAucm93LmFsaWduLWl0ZW1zLXN0YXJ0Lm1iLTUKICAgICAgLmNvbC1sZy00Lm1iLTMubWItbGctMC5vcmRlci0xLm9yZGVyLWxnLTIKICAgICAgICBmaWd1cmUKICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWE0LzIucG5nIiwgYWx0PSIiKS5tYi00Lm1iLWxnLTAKICAgICAgLmNvbC1sZy04Lm9yZGVyLTIub3JkZXItbGctMQogICAgCiAgICAgICAgQWNvcmRpb25BKHRpcG89ImIiKQogICAgICAgICAgLmRpdih0aXR1bG89IlZhbG9yZXMgb3JnYW5pemFjaW9uYWxlcyIpCiAgICAgICAgICAgIHAubWItMCBTb24gbG9zIHByaW5jaXBpb3MgZnVuZGFtZW50YWxlcyBxdWUgZ3XDrWFuIGVsIGNvbXBvcnRhbWllbnRvIHkgbGEgdG9tYSBkZSBkZWNpc2lvbmVzIGRlbnRybyBkZSBsYSBvcmdhbml6YWNpw7NuLiBSZXByZXNlbnRhbiBsbyBxdWUgbGEgZW1wcmVzYSBjb25zaWRlcmEgaW1wb3J0YW50ZSB5IHB1ZWRlbiBpbmNsdWlyIHZhbG9yZXMgY29tbyBsYSBpbm5vdmFjacOzbiwgbGEgaW50ZWdyaWRhZCwgbGEgcmVzcG9uc2FiaWxpZGFkIHNvY2lhbCB5IGVsIHRyYWJham8gZW4gZXF1aXBvLiBMb3MgdmFsb3JlcyBvcmdhbml6YWNpb25hbGVzIGF5dWRhbiBhIGVzdGFibGVjZXIgdW5hIGlkZW50aWRhZCBjb21wYXJ0aWRhIGVudHJlIGxvcyBlbXBsZWFkb3MgeSBmb21lbnRhbiB1biBzZW50aWRvIGRlIHBlcnRlbmVuY2lhLgogICAgCiAgICAgICAgICAuZGl2KHRpdHVsbz0iQ3JlZW5jaWFzIHkgc3Vwb3NpY2lvbmVzIikKICAgICAgICAgICAgcC5tYi0wIFNvbiBpZGVhcyB5IHBlcmNlcGNpb25lcyBxdWUgbG9zIG1pZW1icm9zIGRlIGxhIG9yZ2FuaXphY2nDs24gdGllbmVuIHNvYnJlIHN1IGVudG9ybm8sIHN1IHRyYWJham8geSBsYSBtYW5lcmEgZW4gcXVlIGRlYmVuIGNvbXBvcnRhcnNlLiBFc3RhcyBjcmVlbmNpYXMgcHVlZGVuIHNlciBleHBsw61jaXRhcyBvIGltcGzDrWNpdGFzIHksIGEgbWVudWRvLCBpbmZsdXllbiBlbiBsYSBmb3JtYSBlbiBxdWUgbGFzIHBlcnNvbmFzIGludGVycHJldGFuIGxhIHJlYWxpZGFkIHkgcmVzcG9uZGVuIGEgbG9zIGRlc2Fmw61vcyBvcmdhbml6YWNpb25hbGVzLgogICAgCiAgICAgICAgICAuZGl2KHRpdHVsbz0iTm9ybWFzIHkgcmVnbGFzIikKICAgICAgICAgICAgcCBJbmNsdXllbiBwb2zDrXRpY2FzIGludGVybmFzLCBwcm9jZWRpbWllbnRvcyB5IGVzdMOhbmRhcmVzIGRlIGNvbXBvcnRhbWllbnRvIHF1ZSByZWd1bGFuIGxhIGZvcm1hIGVuIHF1ZSBsb3MgZW1wbGVhZG9zIGRlYmVuIGFjdHVhciBlbiBkaXZlcnNhcyBzaXR1YWNpb25lcy4gRXN0YXMgbm9ybWFzIHB1ZWRlbiBzZXIgZm9ybWFsZXMsIGNvbW8gY8OzZGlnb3MgZGUgY29uZHVjdGEgeSByZWdsYW1lbnRvcyBpbnRlcm5vcywgbyBpbmZvcm1hbGVzLCBjb21vIGxhcyBleHBlY3RhdGl2YXMgaW1wbMOtY2l0YXMgc29icmUgZWwgdHJhdG8gZW50cmUgY29tcGHDsWVyb3MgbyBsYSB2ZXN0aW1lbnRhIGVuIGVsIHRyYWJham8uCiAgICAgICAgICAuZGl2KHRpdHVsbz0iU8OtbWJvbG9zIHkgbGVuZ3VhamUiKQogICAgICAgICAgICBwIExvcyBzw61tYm9sb3Mgb3JnYW5pemFjaW9uYWxlcyBpbmNsdXllbiBsb2dvdGlwb3MsIGNvbG9yZXMgY29ycG9yYXRpdm9zLCBsZW1hcyB5IG90cm9zIGVsZW1lbnRvcyB2aXN1YWxlcyBxdWUgcmVwcmVzZW50YW4gbGEgaWRlbnRpZGFkIGRlIGxhIGVtcHJlc2EuIEVsIGxlbmd1YWplIG9yZ2FuaXphY2lvbmFsIHNlIHJlZmllcmUgYSBsYSB0ZXJtaW5vbG9nw61hIGVzcGVjw61maWNhIHV0aWxpemFkYSBkZW50cm8gZGUgbGEgZW1wcmVzYSwgY29tbyBhY3LDs25pbW9zLCBmcmFzZXMgZGlzdGludGl2YXMgbyBleHByZXNpb25lcyBjb211bmVzIGVuIGxhIGNvbXVuaWNhY2nDs24gaW50ZXJuYS4KICAgIAogICAgLnJvdy5hbGlnbi1pdGVtcy1zdGFydC5tYi01CiAgICAgIC5jb2wtbGctNC5tYi0zLm1iLWxnLTAKICAgICAgICBmaWd1cmUKICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWE0LzMucG5nIiwgYWx0PSIiKS5tYi00Lm1iLWxnLTAKICAgICAgLmNvbC1sZy04CiAgICAKICAgICAgICBBY29yZGlvbkEodGlwbz0iYiIpCiAgICAgICAgICAuZGl2KHRpdHVsbz0iSGlzdG9yaWFzIHkgbWl0b3MiKQogICAgICAgICAgICBwLm1iLTAgTGFzIGhpc3RvcmlhcyBvcmdhbml6YWNpb25hbGVzIHNvbiByZWxhdG9zIHNvYnJlIGV2ZW50b3MgcGFzYWRvcyBxdWUgcmVmbGVqYW4gbG9zIHZhbG9yZXMgeSBjcmVlbmNpYXMgZGUgbGEgZW1wcmVzYS4gRXN0YXMgbmFycmF0aXZhcyBwdWVkZW4gaW5jbHVpciBjYXNvcyBkZSDDqXhpdG8sIGFuw6ljZG90YXMgZGUgbG9zIGZ1bmRhZG9yZXMgbyBlcGlzb2Rpb3MgcXVlIGRlc3RhY2FuIGxhIGN1bHR1cmEgZGUgbGEgb3JnYW5pemFjacOzbi4gTG9zIG1pdG9zLCBwb3Igb3RybyBsYWRvLCBzb24gaGlzdG9yaWFzIHNpbWLDs2xpY2FzIHF1ZSByZWZ1ZXJ6YW4gbGEgaWRlbnRpZGFkIG9yZ2FuaXphY2lvbmFsIHkgYXl1ZGFuIGEgY29uc3RydWlyIHVuYSBjdWx0dXJhIGNvaGVzaW9uYWRhLgogICAgCiAgICAgICAgICAuZGl2KHRpdHVsbz0iTGlkZXJhemdvIHkgZXN0aWxvIGRlIGRpcmVjY2nDs24iKQogICAgICAgICAgICBwLm1iLTAgRWwgcGFwZWwgZGUgbG9zIGzDrWRlcmVzIGVzIGZ1bmRhbWVudGFsIGVuIGxhIGNvbnN0cnVjY2nDs24geSBtYW50ZW5pbWllbnRvIGRlIGxhIGN1bHR1cmEgb3JnYW5pemFjaW9uYWwuIFN1IGNvbXBvcnRhbWllbnRvLCBlc3RpbG8gZGUgbGlkZXJhemdvIHkgdmFsb3JlcyBpbmZsdXllbiBlbiBsYSBtYW5lcmEgZW4gcXVlIGxvcyBlbXBsZWFkb3Mgc2UgcmVsYWNpb25hbiBjb24gbGEgZW1wcmVzYS4gVW4gbGlkZXJhemdvIGFsaW5lYWRvIGNvbiBsYSBjdWx0dXJhIG9yZ2FuaXphY2lvbmFsIGZvbWVudGEgdW4gYW1iaWVudGUgZGUgdHJhYmFqbyBwb3NpdGl2byB5IHVuYSBtYXlvciBjb2hlc2nDs24gaW50ZXJuYS4KICAgIAogICAgICAgICAgLmRpdih0aXR1bG89IkVzdHJ1Y3R1cmEgb3JnYW5pemFjaW9uYWwiKQogICAgICAgICAgICBwIEhhY2UgcmVmZXJlbmNpYSBhIGxhIGplcmFycXXDrWEsIGxvcyByb2xlcyB5IGxhIGRpc3RyaWJ1Y2nDs24gZGUgcmVzcG9uc2FiaWxpZGFkZXMgZGVudHJvIGRlIGxhIGVtcHJlc2EuIFVuYSBlc3RydWN0dXJhIG9yZ2FuaXphY2lvbmFsIGZsZXhpYmxlIHB1ZWRlIGZvbWVudGFyIGxhIGlubm92YWNpw7NuIHkgZWwgdHJhYmFqbyBlbiBlcXVpcG8sIG1pZW50cmFzIHF1ZSB1bmEgZXN0cnVjdHVyYSByw61naWRhIHB1ZWRlIHByb21vdmVyIGVzdGFiaWxpZGFkIHkgY29udHJvbC4KICAgICAgICAgIC5kaXYodGl0dWxvPSJDbGltYSBvcmdhbml6YWNpb25hbCIpCiAgICAgICAgICAgIHAgU2UgcmVsYWNpb25hIGNvbiBsYSBwZXJjZXBjacOzbiBxdWUgbG9zIGVtcGxlYWRvcyB0aWVuZW4gc29icmUgZWwgYW1iaWVudGUgZGUgdHJhYmFqbywgaW5jbHV5ZW5kbyBhc3BlY3RvcyBjb21vIGxhIHNhdGlzZmFjY2nDs24gbGFib3JhbCwgbGEgbW90aXZhY2nDs24sIGxhIGNvbXVuaWNhY2nDs24gaW50ZXJuYSB5IGxhIHJlbGFjacOzbiBlbnRyZSBjb21wYcOxZXJvcy4gVW4gY2xpbWEgb3JnYW5pemFjaW9uYWwgcG9zaXRpdm8gZm9ydGFsZWNlIGxhIGN1bHR1cmEgb3JnYW5pemFjaW9uYWwgeSBtZWpvcmEgZWwgZGVzZW1wZcOxbyBkZSBsb3MgdHJhYmFqYWRvcmVzLgogICAgICAgICAgLmRpdih0aXR1bG89IkFkYXB0YWJpbGlkYWQgeSBmbGV4aWJpbGlkYWQiKQogICAgICAgICAgICBwIEVzIGxhIGNhcGFjaWRhZCBkZSBsYSBvcmdhbml6YWNpw7NuIHBhcmEgcmVzcG9uZGVyIGEgY2FtYmlvcyBpbnRlcm5vcyB5IGV4dGVybm9zIHNpbiBjb21wcm9tZXRlciBzdSBpZGVudGlkYWQuIFVuYSBjdWx0dXJhIG9yZ2FuaXphY2lvbmFsIGZsZXhpYmxlIHBlcm1pdGUgYSBsYSBlbXByZXNhIGV2b2x1Y2lvbmFyIHkgYWp1c3RhcnNlIGEgbnVldmFzIHRlbmRlbmNpYXMgZGVsIG1lcmNhZG8sIG5lY2VzaWRhZGVzIGRlIGxvcyBjbGllbnRlcyB5IGNhbWJpb3MgdGVjbm9sw7NnaWNvcy4KICAgICAgICAgIAogICAgcC5tYi00IExhIGN1bHR1cmEgb3JnYW5pemFjaW9uYWwgc2UgY29tcG9uZSBkZSB2YWxvcmVzIGZ1bmRhbWVudGFsZXMgY29tcGFydGlkb3MgcG9yIGxhIG1heW9yw61hIGRlIGxvcyBtaWVtYnJvcyBkZSB1bmEgZW1wcmVzYSwgbG8gcXVlIGNvbmZvcm1hIHVuYSBjdWx0dXJhIGRvbWluYW50ZS4gU2kgZXN0YSBubyBlc3R1dmllcmEgcHJlc2VudGUsIGxhIGN1bHR1cmEgb3JnYW5pemFjaW9uYWwgcGVyZGVyw61hIHN1IGltcGFjdG8gY29tbyB2YXJpYWJsZSBpbmRlcGVuZGllbnRlLCBwb3JxdWUgbm8gZXhpc3RpcsOtYSB1bmEgcGVyY2VwY2nDs24gY29tw7puIHNvYnJlIHF1w6kgY29tcG9ydGFtaWVudG9zIHNvbiBhZGVjdWFkb3MgbyBpbmFkZWN1YWRvcy4KCiAgICAucm93Lm1iLTUKICAgICAgLmNvbC1sZy00Lm1iLTMubWItbGctMC5vcmRlci0xLm9yZGVyLWxnLTIKICAgICAgICBmaWd1cmUKICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWE0LzQucG5nIiwgZGF0YS1hb3M9Inpvb20taW4iKQogICAgICAuY29sLWxnLTgub3JkZXItMi5vcmRlci1sZy0xCiAgICAgICAgLmJnLWNvbG9yLTIucC00Lm1iLTMoZGF0YS1hb3M9ImZhZGUtbGVmdCIpCiAgICAgICAgICBwLm1iLTAgQ29udGFyIGNvbiB1bmEgY3VsdHVyYSBkb21pbmFudGUgZm9ydGFsZWNlIGVsIHNlbnRpZG8gZGUgcGVydGVuZW5jaWEgZGUgbG9zIGVtcGxlYWRvcyBoYWNpYSB1biBwcm9ww7NzaXRvIHF1ZSB2YSBtw6FzIGFsbMOhIGRlIHN1cyBpbnRlcmVzZXMgaW5kaXZpZHVhbGVzLCBiZW5lZmljaWFuZG8gYSB0b2RhIGxhIG9yZ2FuaXphY2nDs24uIEFkZW3DoXMsIGNvbnRyaWJ1eWUgYSBnZW5lcmFyIGVzdGFiaWxpZGFkIGVuIGVsIGVudG9ybm8gbGFib3JhbCwgcHJvbW92aWVuZG8gdW4gYW1iaWVudGUgZW4gZWwgcXVlIGxvcyB0cmFiYWphZG9yZXMgc2Ugc2llbnRhbiBjw7Ntb2RvcywgaW5jcmVtZW50ZW4gc3UgcHJvZHVjdGl2aWRhZCB5IHNlYW4gcmVjb25vY2lkb3MgcG9yIHN1cyBjb250cmlidWNpb25lcyB5IHN1IGFwcm92ZWNoYW1pZW50byBkZWwgY29ub2NpbWllbnRvIG9yZ2FuaXphY2lvbmFsLgogICAgICAgIHAoZGF0YS1hb3M9ImZhZGUtbGVmdCIpIFBhcmEgY29tcGFydGlyIHkgZ2VuZXJhciBjb25vY2ltaWVudG8gZGUgbWFuZXJhIGVmZWN0aXZhLCBlcyBmdW5kYW1lbnRhbCBlc3RhYmxlY2VyIG1lY2FuaXNtb3MgZGUgY29udHJvbCBpbnRlcm5vcyBxdWUgZmlsdHJlbiBsYSBpbmZvcm1hY2nDs24gcmVsZXZhbnRlIHBhcmEgbGEgb3JnYW5pemFjacOzbiwgZXZpdGFuZG8gcXVlIHNlIHBpZXJkYSBlbCBzZW50aWRvIGRlIGNvbGFib3JhY2nDs24geSBjb2hlc2nDs24gZW50cmUgc3VzIGludGVncmFudGVzLgogICAgCiAgICAuYmctZnVsbC13aWR0aC5iZy1jb2xvci0xMC5tYi01CiAgICAgIC5weC00LnB4LW1kLTUucHktNAogICAgICAgIC5yb3cuYWxpZ24taXRlbXMtY2VudGVyCiAgICAgICAgICAuY29sLWxnLWF1dG8KICAgICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTQvNS5zdmciLCBzdHlsZT0ibWF4LXdpZHRoOiA5MHB4IikubXgtYXV0bwogICAgICAgICAgLmNvbC1sZwogICAgICAgICAgICBwLm1iLTAudGV4dC13aGl0ZSBFbiBsYSBtZWRpZGEgZW4gcXVlIHVuYSBlbXByZXNhIGxvZ3JhIGFmcm9udGFyIGNvbiDDqXhpdG8gbGEgY29tcGxlamlkYWQgZGVsIGVudG9ybm8sIHNlIGluY3JlbWVudGFuIHN1cyBwb3NpYmlsaWRhZGVzIGRlIGFsY2FuemFyIHN1cyBvYmpldGl2b3MuIEVzdGEgZGluw6FtaWNhIGRhIGx1Z2FyIGFsIGNvbmNlcHRvIGRlIGN1bHR1cmEgb3JnYW5pemFjaW9uYWwgbyBlbXByZXNhcmlhbCwgZWwgY3VhbCB0YW1iacOpbiBwZXJtaXRlIGV2YWx1YXIgbGEgY2FwYWNpZGFkIGRlIGxvcyBsw61kZXJlcyBwYXJhIGdlc3Rpb25hciBlbCBjYW1iaW8gZW4gbGFzIHJlbGFjaW9uZXMgaHVtYW5hcyB5IG9yaWVudGFybGFzIGhhY2lhIHVuIGJlbmVmaWNpbyBjb23Dum4uCgogICAgI3RfNF8xLnRpdHVsby1zZWd1bmRvKGRhdGEtYW9zPSJmbGlwLXVwIikKICAgICAgaDIgI1tzcGFuIDQuMV0gRnVuY2lvbmVzIGRlIGxhIGN1bHR1cmEgb3JnYW5pemFjaW9uYWwKICAgIAogICAgLmJnLWZ1bGwtd2lkdGguYmctaDg1LTUKICAgICAgLnB4LTQucHgtbWQtNQogICAgICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWFyb3VuZC5hbGlnbi1pdGVtcy1jZW50ZXIKICAgICAgICAgIC5jb2wtbGctNQogICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hNC82LnN2ZyIsIGRhdGEtYW9zPSJ6b29tLWluIikKICAgICAgICAgIC5jb2wtbGctNgogICAgICAgICAgICBwKGRhdGEtYW9zPSJmYWRlLWxlZnQiKS5tYi00IFBhcmEgZXN0dWRpYXIgbGEgdGVtw6F0aWNhLCBsbyBpbnZpdGFtb3MgYSBlc2N1Y2hhciBlbCBzaWd1aWVudGUgcG9kY2FzdC4KICAgIAogICAgICAgICAgICBUYXJqZXRhQXVkaW8uY29sb3ItYWNlbnRvLWJvdG9uZXMuYmctY29sb3Itd2hpdGUubWItMygKICAgICAgICAgICAgICB0ZXh0bz0iRnVuZGFtZW50b3MgZGUgbGEgaW5ub3ZhY2nDs24gZXN0cmF0w6lnaWNhIgogICAgICAgICAgICAgIHRpZW1wbwogICAgICAgICAgICAgIDphdWRpbz0icmVxdWlyZSgnLi4vLi4vYXNzZXRzL2N1cnNvL3BvZGNhc3QvcG9kY2FzdDEubXAzJykiCiAgICAgICAgICAgICkKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWNvbG9yLTEyCiAgICAgIC5weC00LnB4LW1kLTUucHktNAogICAgICAgIHAubWItMCBTZSBlc3R1ZGlhIGxhIGN1bHR1cmEgb3JnYW5pemFjaW9uYWwgY29tbyB1biBlbGVtZW50byBjbGF2ZSBxdWUgZGVmaW5lIGxhIGlkZW50aWRhZCwgdmFsb3JlcyB5IG5vcm1hcyBkZW50cm8gZGUgdW5hIGVtcHJlc2EsIGluZmx1eWVuZG8gZW4gZWwgY29tcG9ydGFtaWVudG8gZGUgc3VzIG1pZW1icm9zLiBBIHRyYXbDqXMgZGUgCgoKCiAgICAuYmctZnVsbC13aWR0aC5ib3JkZXItdG9wLmNvbG9yLXByaW1hcmlvCiAgICAgIC5wLTQucC1tZC01CiAgICAgICAgaDIoZGF0YS1hb3M9ImZhZGUtbGVmdCIpIE1BVEVSSUFMIENPTVBMRU1FTlRBUklPCiAgICAgICAgLnJvdy5tYXRlcmlhbC1jb21wbGVtZW50YXJpbwogICAgICAgICAgLmNvbC0xMi5jb2wtbWQtNi5jb2wtbGctNwogICAgICAgICAgICBwIExvcyBpbnZpdGFtb3MgYSBleHBsb3JhciBlbCBtYXRlcmlhbCBjb21wbGVtZW50YXJpbyBkZSBlc3RlIGN1cnNvLCBlbiBlc3RhIHNlY2Npw7NuIGVuY29udHJhcsOhIHJlY3Vyc29zIHF1ZSBsZSBwZXJtaXRpcsOhbiBwcm9mdW5kaXphciAgeSBlbnJpcXVlY2VyIHN1IGFwcmVuZGl6YWplIGVuIGxvcyB0ZW1hcyB0cmF0YWRvcyBlbiBlc3RhIHVuaWRhZC4KCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8vYmRpZ2l0YWwudW5jdS5lZHUuYXIvZmljaGFzLnBocD9pZG9iamV0bz0xNTY3MiAiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiKSBCZXJ0b25hLCBNLiBBLiBkZWwgUi4gKDIwMjApLiBDdWx0dXJhIG9yZ2FuaXphY2lvbmFsIHkgZ2VzdGnDs24gaW50ZXJjdWx0dXJhbDogQW7DoWxpc2lzIGRlIGNhc29zLiBCaWJsaW90ZWNhIERpZ2l0YWwgZGUgVW5jdXlvLiAKCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8vZXMud2lraXBlZGlhLm9yZy93aWtpL0N1bHR1cmFfb3JnYW5pemFjaW9uYWw/dXRtX3NvdXJjZT1jaGF0Z3B0LmNvbSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciIpIFdpa2lwZWRpYUxhIGVuY2ljbG9wZWRpYSBsaWJyZSAoMTUgb2N0IDIwMjQpIEN1bHR1cmEgb3JnYW5pemFjaW9uYWwgCgogICAgICAgICAgCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL3RlbXBsYXRlL2ljb25vLXl0LnN2ZycgOnN0eWxlPSJ7J21heC13aWR0aCc6JzE2cHgnfSIpCiAgICAgICAgICAgICAgYShocmVmPSJodHRwczovL3lvdXR1LmJlL1FLTGp3Q015djNNP3NpPXVBV2hPOXRueWdobGphSmciIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiKSBDdWx0dXJhNTIgKDIwMjMsIDEzIGRlIGp1bmlvKSDCv0PDs21vIHNlIGNvbnN0cnV5ZSBjdWx0dXJhIG9yZ2FuaXphY2lvbmFsPyAuIFtWaWRlb10gWW91dHViZSAKCiAgICAgICAgICAuY29sLTEyLmNvbC1tZC02LmNvbC1sZy0zLm9mZnNldC1sZy0xCiAgICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL21hdGVyaWFsLWNvbXBsZW1lbnRhcmlvLnN2ZycsIGFsdD0nJykKCg=="},null]}